/*
 * This file is generated by jOOQ.
 */
package org.readutf.buildstore.generated;


import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.DSL;
import org.jooq.impl.SchemaImpl;
import org.readutf.buildstore.generated.tables.Buildmeta;
import org.readutf.buildstore.generated.tables.BuildmetaFormat;
import org.readutf.buildstore.generated.tables.BuildmetaTags;
import org.readutf.buildstore.generated.tables.FlywaySchemaHistory;


/**
 * standard public schema
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.buildmeta</code>.
     */
    public final Buildmeta BUILDMETA = Buildmeta.BUILDMETA;

    /**
     * The table <code>public.buildmeta_format</code>.
     */
    public final BuildmetaFormat BUILDMETA_FORMAT = BuildmetaFormat.BUILDMETA_FORMAT;

    /**
     * The table <code>public.buildmeta_tags</code>.
     */
    public final BuildmetaTags BUILDMETA_TAGS = BuildmetaTags.BUILDMETA_TAGS;

    /**
     * The table <code>public.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * No further instances allowed
     */
    private Public() {
        super(DSL.name("public"), null, DSL.comment("standard public schema"));
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Buildmeta.BUILDMETA,
            BuildmetaFormat.BUILDMETA_FORMAT,
            BuildmetaTags.BUILDMETA_TAGS,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY
        );
    }
}
